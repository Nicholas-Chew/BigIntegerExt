---
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
branches:
  only:
    - master
build:
  publish_nuget: true
  verbosity: minimal
before_build:
  - nuget restore
  -
    ps: |
        $path = (Get-Item .\BigIntegerExt\BigIntegerExt.csproj).FullName
        $csproj = [xml](Get-Content $path)
        $csproj.Project.PropertyGroup.Version = $Env:APPVEYOR_BUILD_VERSION
        $csproj.Save($path)
after_build:
  - dotnet pack .\BigIntegerExt\BigIntegerExt.csproj --configuration Release --no-build
test_script:
  - dotnet test .\BigIntegerExtTest\BigIntegerExtTest.csproj --no-build
configuration: Release
environment:
  AppVeyorAPIToken:
    secure: GvygCCndEp8eiXvItooIyglWYnyfUvg4YNyaufw3N3A=
  AppVeyorGlobalAPIToken:
    secure: XaWtuymf7dtXgjvEdnxXZVuIGVwMYUqOcE3dl3f3JzA=
  NugetAPIToken:
    secure: U630adFlFmWqwvorvfwA+YvFtAkfL+vw1EX0vCXbyk+R6qiLkIeqKek9yK+poBjV
image: "Visual Studio 2017 Preview"
nuget:
  disable_publish_on_pr: true
artifacts:
  - path: '**\*.nupkg'
on_success:
  -
    ps: |
        if ( $env:APPVEYOR_REPO_TAG -And `
            ($env:APPVEYOR_REPO_TAG_NAME -match '^v\d+\.\d+\.\d+$') -And `
            ($env:APPVEYOR_REPO_BRANCH -eq 'master') -And `
            ($env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null) ) # new version release
        {
          Write-Host "Pushing ${env:APPVEYOR_REPO_TAG_NAME} to NuGet feed"

          & "nuget" @("setApiKey", $env:NugetAPIToken)

          Get-ChildItem .\*.nupkg `
          | % { & "nuget" @("push", $_.FullName, `
                            "-Source", "https://www.nuget.org/api/v2/package") }
        }

        rm .\*.nupkg
version: "0.1.0.{build}"
